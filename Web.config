<?xml version="1.0" encoding="utf-8"?>
<!-- 
    Nota: en lugar de editar manualmente este archivo puede usar la 
    herramienta Administración de sitios web para configurar las opciones de su aplicación. Use
    la opción Sitio web->Configuración de Asp.Net en Visual Studio.
    Encontrará una lista completa de valores de configuración y comentarios en 
    machine.config.comments, ubicado normalmente en 
    \Windows\Microsoft.Net\Framework\vx.x\Config 
-->
<configuration>


  <appSettings>
     <add key="strConn" value="Data Source =LAPTOP-GKJTMP6R\MSSQLSERVER2;Initial Catalog=DB_PAAC3GN3ANDAURGOTSCHLICHVALENZUELA;User Id=sa;Password=123456"/>
  </appSettings>
    <connectionStrings>
        <add name="DB_PAAC3GN3ANDAURGOTSCHLICHVALENZUELAConnectionString"
            connectionString="Data Source=LAPTOP-GKJTMP6R\MSSQLSERVER2;Initial Catalog=DB_PAAC3GN3ANDAURGOTSCHLICHVALENZUELA;Persist Security Info=True;User ID=sa;Password=123456"
            providerName="System.Data.SqlClient" />
    </connectionStrings>
  <system.web>
    <!-- 
            Establezca compilation debug="true" para insertar símbolos 
      de depuración en la página compilada. Puesto que esto 
      afecta al rendimiento, establezca este valor en true solo 
      durante el desarrollo.
       -->
    <compilation debug="true">

    </compilation>
    <!--
            La sección <authentication> habilita la configuración 
      del modo de autenticación de seguridad que usa 
      ASP.NET para identificar a un usuario entrante. 
        -->
    <authentication mode="Forms">
      <forms loginUrl="MiLogin.aspx" defaultUrl="Inicio.aspx">
        <credentials passwordFormat="MD5">
          <user name="profe" password="1145CBF42070C6704B66D6AC75347726"/>
        </credentials>
      </forms>
    </authentication>
    <authorization>
      <deny users="?"/>
      <!--acá denegas el acceso a los usuarios anónimos-->
    </authorization>

    <!--
            La sección <customErrors> habilita la configuración de 
       las acciones que se deben realizar si un error no controlado tiene lugar
       durante la ejecución de una solicitud. En concreto, 
       permite a los desarrolladores configurar páginas de error html 
       que se mostrarán en lugar de un seguimiento de pila de errores.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->



  </system.web>

</configuration>
